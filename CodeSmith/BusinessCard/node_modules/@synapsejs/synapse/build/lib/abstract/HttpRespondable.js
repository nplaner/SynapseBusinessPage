"use strict";
/* eslint-disable import/extensions */
/* eslint-disable no-underscore-dangle */
/* eslint-disable class-methods-use-this */
Object.defineProperty(exports, "__esModule", { value: true });
var HttpRespondable = /** @class */ (function () {
    function HttpRespondable() {
    }
    HttpRespondable.OK = function (payload) {
        if (payload === void 0) { payload = null; }
        return new this(200, payload);
    };
    HttpRespondable.CREATED = function (payload) {
        if (payload === void 0) { payload = null; }
        return new this(201, payload);
    };
    HttpRespondable.NO_CONTENT = function () {
        return new this(204);
    };
    HttpRespondable.BAD_REQUEST = function (payload) {
        if (payload === void 0) { payload = null; }
        return new this(400, payload);
    };
    HttpRespondable.UNAUTHORIZED = function (payload) {
        if (payload === void 0) { payload = null; }
        return new this(401, payload);
    };
    HttpRespondable.FORBIDDEN = function (payload) {
        if (payload === void 0) { payload = null; }
        return new this(403, payload);
    };
    HttpRespondable.NOT_FOUND = function (payload) {
        if (payload === void 0) { payload = null; }
        return new this(404, payload);
    };
    HttpRespondable.CONFLICT = function (payload) {
        if (payload === void 0) { payload = null; }
        return new this(409, payload);
    };
    HttpRespondable.INTERNAL_SERVER_ERROR = function (payload) {
        if (payload === void 0) { payload = null; }
        return new this(500, payload);
    };
    return HttpRespondable;
}());
exports.default = HttpRespondable;
