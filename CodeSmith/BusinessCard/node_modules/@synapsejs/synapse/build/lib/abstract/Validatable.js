"use strict";
/* eslint-disable no-bitwise */
/* eslint-disable no-param-reassign */
/* eslint-disable import/extensions */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.field = void 0;
var State_1 = require("../control/State");
var Schema_1 = require("../state/Schema");
var Field_1 = require("../state/Field");
var Validatable = /** @class */ (function (_super) {
    __extends(Validatable, _super);
    function Validatable() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Validatable.$field = function (field, name) {
        var _a;
        var Class = this;
        if (!(field instanceof Field_1.default)) {
            throw new Error("Expected instance of Field.");
        }
        if (!Class.schema) {
            Class.schema = new Schema_1.default();
        }
        Class.schema = Class.schema.extend((_a = {}, _a[name] = field, _a));
    };
    return Validatable;
}(State_1.default));
exports.default = Validatable;
// decorators:
exports.field = function (instance, flags) {
    if (flags === void 0) { flags = 0; }
    return function (target, fieldName) {
        var Class = target.constructor;
        instance.flags |= flags;
        Class.$field(instance, fieldName);
    };
};
