"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Relation = /** @class */ (function () {
    function Relation() {
        this.fromMap = new Map();
        this.toMap = new Map();
    }
    Relation.prototype.link = function (from, to) {
        if (!this.fromMap.has(from)) {
            this.fromMap.set(from, new Set());
        }
        this.fromMap.get(from).add(to);
        if (!this.toMap.has(to)) {
            this.toMap.set(to, new Set());
        }
        this.toMap.get(to).add(from);
    };
    Relation.prototype.unlink = function (from, to) {
        var _this = this;
        if (from === void 0) { from = null; }
        if (to === void 0) { to = null; }
        if (from && to) {
            if (this.fromMap.has(from)) {
                this.fromMap.get(from).delete(to);
            }
            if (this.toMap.has(to)) {
                this.toMap.get(to).delete(from);
            }
        }
        else if (from) {
            if (this.fromMap.has(from)) {
                this.fromMap.get(from).forEach(function (val) {
                    _this.toMap.get(val).delete(from);
                });
                this.fromMap.delete(from);
            }
        }
        else if (to) {
            if (this.toMap.has(to)) {
                this.toMap.get(to).forEach(function (val) {
                    _this.fromMap.get(val).delete(to);
                });
                this.toMap.delete(to);
            }
        }
    };
    Relation.prototype.from = function (val) {
        return Array.from(this.fromMap.get(val) || []);
    };
    Relation.prototype.to = function (val) {
        return Array.from(this.toMap.get(val) || []);
    };
    return Relation;
}());
exports.default = Relation;
