"use strict";
/* eslint-disable import/extensions */
/* eslint-disable no-underscore-dangle */
/* eslint-disable class-methods-use-this */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var HttpRespondable_1 = require("../abstract/HttpRespondable");
var State = /** @class */ (function (_super) {
    __extends(State, _super);
    function State(status, message, path, uses, query, flags) {
        if (message === void 0) { message = ""; }
        if (path === void 0) { path = null; }
        if (uses === void 0) { uses = []; }
        if (query === void 0) { query = null; }
        if (flags === void 0) { flags = {}; }
        var _this = _super.call(this) || this;
        if (!(status >= 100 && status < 600)) {
            throw new Error("Invalid status '" + status + "'.");
        }
        _this.$ = {
            type: _this.constructor.name,
            status: status,
            message: message,
            path: path,
            dependencies: new Set(uses),
            query: query,
            flags: flags,
        };
        return _this;
    }
    State.prototype.$status = function (value) {
        if (value === void 0) { value = null; }
        if (value) {
            this.$.status = value;
        }
        return this.$.status;
    };
    State.prototype.$message = function (value) {
        if (value === void 0) { value = null; }
        if (value) {
            this.$.message = value;
        }
        return this.$.message;
    };
    State.prototype.$path = function (value) {
        if (value === void 0) { value = null; }
        if (value) {
            this.$.path = value;
        }
        return this.$.path;
    };
    State.prototype.$query = function (value) {
        if (value === void 0) { value = null; }
        if (value) {
            this.$.query = value;
        }
        return this.$.query;
    };
    State.prototype.$dependencies = function () {
        var _this = this;
        var paths = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            paths[_i] = arguments[_i];
        }
        paths.forEach(function (path) { return _this.$.dependencies.add(path); });
        return Array.from(this.$.dependencies);
    };
    State.prototype.$flags = function (value) {
        if (value === void 0) { value = null; }
        if (value) {
            this.$.flags = value;
        }
        return this.$.flags;
    };
    /** Checks if the instance's {@linkcode State.status|status} is a 4xx or 5xx error. */
    State.prototype.isError = function () {
        return ["4", "5"].includes(this.$status().toString()[0]);
    };
    State.prototype.render = function () {
        return this.$.message;
    };
    State.prototype.toJSON = function () {
        return __assign(__assign({}, this.$), { payload: this.render() });
    };
    return State;
}(HttpRespondable_1.default));
exports.default = State;
