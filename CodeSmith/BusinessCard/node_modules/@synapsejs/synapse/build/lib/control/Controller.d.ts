import Functor from "../utility/Functor";
import State from "./State";
import Schema from "../state/Schema";
import Router from "../utility/Router";
export default class Controller extends Functor {
    static router: Router;
    pattern: string;
    dependencies: Array<string>;
    dependents: Array<string>;
    schema: Schema;
    authorizer: Function;
    cacheable: boolean;
    constructor(target: Function);
    try: (args: object, flags?: object) => Promise<any>;
    expose: (method: string, pattern: string) => Controller;
    static request: (method: string, path: string, args?: object, flags?: object) => Promise<State>;
}
