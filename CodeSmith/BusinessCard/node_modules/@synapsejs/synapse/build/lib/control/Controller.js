"use strict";
/* eslint-disable no-underscore-dangle */
/* eslint-disable import/extensions */
/* eslint-disable lines-between-class-members */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var Functor_1 = require("../utility/Functor");
var State_1 = require("./State");
var Schema_1 = require("../state/Schema");
var Operation_1 = require("./Operation");
var Manager_1 = require("./Manager");
var Router_1 = require("../utility/Router");
var utility_1 = require("../utility");
var Controller = /** @class */ (function (_super) {
    __extends(Controller, _super);
    function Controller(target) {
        var _this = _super.call(this) || this;
        _this.dependencies = [];
        _this.dependents = [];
        _this.schema = new Schema_1.default();
        _this.try = function (args, flags) {
            if (flags === void 0) { flags = {}; }
            return __awaiter(_this, void 0, void 0, function () {
                var authorized, _a;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            if (!this.authorizer) return [3 /*break*/, 2];
                            return [4 /*yield*/, this.authorizer(args)];
                        case 1:
                            _a = _b.sent();
                            return [3 /*break*/, 3];
                        case 2:
                            _a = args;
                            _b.label = 3;
                        case 3:
                            authorized = _a;
                            if (authorized instanceof State_1.default) {
                                return [2 /*return*/, authorized];
                            }
                            return [2 /*return*/, this(authorized, flags)];
                    }
                });
            });
        };
        _this.expose = function (method, pattern) {
            _this.pattern = pattern;
            _this.cacheable = method === "get";
            Controller.router.declare(method, pattern, function (args, flags) { return _this.try(args, flags); });
            return _this;
        };
        _this.__call__ = function (args, flags) {
            if (flags === void 0) { flags = {}; }
            return __awaiter(_this, void 0, void 0, function () {
                var validated, path, dependents, dependencies, op;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.schema.validate(args)];
                        case 1:
                            validated = _a.sent();
                            if (!validated) {
                                return [2 /*return*/, State_1.default.BAD_REQUEST(this.schema.lastError)];
                            }
                            if (!this.pattern) {
                                return [2 /*return*/, target(validated)];
                            }
                            path = utility_1.routeToPath(this.pattern, validated);
                            dependents = this.dependents.map(function (pattern) { return utility_1.routeToPath(pattern, validated); });
                            dependencies = this.dependencies.map(function (pattern) { return utility_1.routeToPath(pattern, validated); });
                            op = new Operation_1.default(path, target, this.cacheable, dependents, dependencies);
                            return [2 /*return*/, Manager_1.default.execute(op, validated, flags)];
                    }
                });
            });
        };
        return _this;
    }
    Controller.router = new Router_1.default();
    Controller.request = function (method, path, args, flags) {
        if (args === void 0) { args = {}; }
        if (flags === void 0) { flags = {}; }
        return __awaiter(void 0, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, Controller.router.request(method, path, args, flags)];
            });
        });
    };
    return Controller;
}(Functor_1.default));
exports.default = Controller;
